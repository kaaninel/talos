// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: resource/definitions/block/block.proto

package block

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	v1alpha1 "google.golang.org/genproto/googleapis/api/expr/v1alpha1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"

	enums "github.com/siderolabs/talos/pkg/machinery/api/resource/definitions/enums"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DeviceSpec is the spec for devices status.
type DeviceSpec struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Type            string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Major           int64                  `protobuf:"varint,2,opt,name=major,proto3" json:"major,omitempty"`
	Minor           int64                  `protobuf:"varint,3,opt,name=minor,proto3" json:"minor,omitempty"`
	PartitionName   string                 `protobuf:"bytes,4,opt,name=partition_name,json=partitionName,proto3" json:"partition_name,omitempty"`
	PartitionNumber int64                  `protobuf:"varint,5,opt,name=partition_number,json=partitionNumber,proto3" json:"partition_number,omitempty"`
	Generation      int64                  `protobuf:"varint,6,opt,name=generation,proto3" json:"generation,omitempty"`
	DevicePath      string                 `protobuf:"bytes,7,opt,name=device_path,json=devicePath,proto3" json:"device_path,omitempty"`
	Parent          string                 `protobuf:"bytes,8,opt,name=parent,proto3" json:"parent,omitempty"`
	Secondaries     []string               `protobuf:"bytes,9,rep,name=secondaries,proto3" json:"secondaries,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DeviceSpec) Reset() {
	*x = DeviceSpec{}
	mi := &file_resource_definitions_block_block_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceSpec) ProtoMessage() {}

func (x *DeviceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceSpec.ProtoReflect.Descriptor instead.
func (*DeviceSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{0}
}

func (x *DeviceSpec) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DeviceSpec) GetMajor() int64 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *DeviceSpec) GetMinor() int64 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *DeviceSpec) GetPartitionName() string {
	if x != nil {
		return x.PartitionName
	}
	return ""
}

func (x *DeviceSpec) GetPartitionNumber() int64 {
	if x != nil {
		return x.PartitionNumber
	}
	return 0
}

func (x *DeviceSpec) GetGeneration() int64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *DeviceSpec) GetDevicePath() string {
	if x != nil {
		return x.DevicePath
	}
	return ""
}

func (x *DeviceSpec) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *DeviceSpec) GetSecondaries() []string {
	if x != nil {
		return x.Secondaries
	}
	return nil
}

// DiscoveredVolumeSpec is the spec for DiscoveredVolumes resource.
type DiscoveredVolumeSpec struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Size                uint64                 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	SectorSize          uint64                 `protobuf:"varint,2,opt,name=sector_size,json=sectorSize,proto3" json:"sector_size,omitempty"`
	IoSize              uint64                 `protobuf:"varint,3,opt,name=io_size,json=ioSize,proto3" json:"io_size,omitempty"`
	Name                string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Uuid                string                 `protobuf:"bytes,5,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Label               string                 `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	BlockSize           uint32                 `protobuf:"varint,7,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
	FilesystemBlockSize uint32                 `protobuf:"varint,8,opt,name=filesystem_block_size,json=filesystemBlockSize,proto3" json:"filesystem_block_size,omitempty"`
	ProbedSize          uint64                 `protobuf:"varint,9,opt,name=probed_size,json=probedSize,proto3" json:"probed_size,omitempty"`
	PartitionUuid       string                 `protobuf:"bytes,10,opt,name=partition_uuid,json=partitionUuid,proto3" json:"partition_uuid,omitempty"`
	PartitionType       string                 `protobuf:"bytes,11,opt,name=partition_type,json=partitionType,proto3" json:"partition_type,omitempty"`
	PartitionLabel      string                 `protobuf:"bytes,12,opt,name=partition_label,json=partitionLabel,proto3" json:"partition_label,omitempty"`
	PartitionIndex      uint64                 `protobuf:"varint,13,opt,name=partition_index,json=partitionIndex,proto3" json:"partition_index,omitempty"`
	Type                string                 `protobuf:"bytes,14,opt,name=type,proto3" json:"type,omitempty"`
	DevicePath          string                 `protobuf:"bytes,15,opt,name=device_path,json=devicePath,proto3" json:"device_path,omitempty"`
	Parent              string                 `protobuf:"bytes,16,opt,name=parent,proto3" json:"parent,omitempty"`
	DevPath             string                 `protobuf:"bytes,17,opt,name=dev_path,json=devPath,proto3" json:"dev_path,omitempty"`
	ParentDevPath       string                 `protobuf:"bytes,18,opt,name=parent_dev_path,json=parentDevPath,proto3" json:"parent_dev_path,omitempty"`
	PrettySize          string                 `protobuf:"bytes,19,opt,name=pretty_size,json=prettySize,proto3" json:"pretty_size,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *DiscoveredVolumeSpec) Reset() {
	*x = DiscoveredVolumeSpec{}
	mi := &file_resource_definitions_block_block_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoveredVolumeSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveredVolumeSpec) ProtoMessage() {}

func (x *DiscoveredVolumeSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveredVolumeSpec.ProtoReflect.Descriptor instead.
func (*DiscoveredVolumeSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{1}
}

func (x *DiscoveredVolumeSpec) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DiscoveredVolumeSpec) GetSectorSize() uint64 {
	if x != nil {
		return x.SectorSize
	}
	return 0
}

func (x *DiscoveredVolumeSpec) GetIoSize() uint64 {
	if x != nil {
		return x.IoSize
	}
	return 0
}

func (x *DiscoveredVolumeSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DiscoveredVolumeSpec) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *DiscoveredVolumeSpec) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *DiscoveredVolumeSpec) GetBlockSize() uint32 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

func (x *DiscoveredVolumeSpec) GetFilesystemBlockSize() uint32 {
	if x != nil {
		return x.FilesystemBlockSize
	}
	return 0
}

func (x *DiscoveredVolumeSpec) GetProbedSize() uint64 {
	if x != nil {
		return x.ProbedSize
	}
	return 0
}

func (x *DiscoveredVolumeSpec) GetPartitionUuid() string {
	if x != nil {
		return x.PartitionUuid
	}
	return ""
}

func (x *DiscoveredVolumeSpec) GetPartitionType() string {
	if x != nil {
		return x.PartitionType
	}
	return ""
}

func (x *DiscoveredVolumeSpec) GetPartitionLabel() string {
	if x != nil {
		return x.PartitionLabel
	}
	return ""
}

func (x *DiscoveredVolumeSpec) GetPartitionIndex() uint64 {
	if x != nil {
		return x.PartitionIndex
	}
	return 0
}

func (x *DiscoveredVolumeSpec) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DiscoveredVolumeSpec) GetDevicePath() string {
	if x != nil {
		return x.DevicePath
	}
	return ""
}

func (x *DiscoveredVolumeSpec) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *DiscoveredVolumeSpec) GetDevPath() string {
	if x != nil {
		return x.DevPath
	}
	return ""
}

func (x *DiscoveredVolumeSpec) GetParentDevPath() string {
	if x != nil {
		return x.ParentDevPath
	}
	return ""
}

func (x *DiscoveredVolumeSpec) GetPrettySize() string {
	if x != nil {
		return x.PrettySize
	}
	return ""
}

// DiscoveryRefreshRequestSpec is the spec for DiscoveryRefreshRequest.
type DiscoveryRefreshRequestSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Request       int64                  `protobuf:"varint,1,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiscoveryRefreshRequestSpec) Reset() {
	*x = DiscoveryRefreshRequestSpec{}
	mi := &file_resource_definitions_block_block_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoveryRefreshRequestSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveryRefreshRequestSpec) ProtoMessage() {}

func (x *DiscoveryRefreshRequestSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveryRefreshRequestSpec.ProtoReflect.Descriptor instead.
func (*DiscoveryRefreshRequestSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{2}
}

func (x *DiscoveryRefreshRequestSpec) GetRequest() int64 {
	if x != nil {
		return x.Request
	}
	return 0
}

// DiscoveryRefreshStatusSpec is the spec for DiscoveryRefreshStatus status.
type DiscoveryRefreshStatusSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Request       int64                  `protobuf:"varint,1,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiscoveryRefreshStatusSpec) Reset() {
	*x = DiscoveryRefreshStatusSpec{}
	mi := &file_resource_definitions_block_block_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoveryRefreshStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveryRefreshStatusSpec) ProtoMessage() {}

func (x *DiscoveryRefreshStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveryRefreshStatusSpec.ProtoReflect.Descriptor instead.
func (*DiscoveryRefreshStatusSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{3}
}

func (x *DiscoveryRefreshStatusSpec) GetRequest() int64 {
	if x != nil {
		return x.Request
	}
	return 0
}

// DiskSelector selects a disk for the volume.
type DiskSelector struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Match         *v1alpha1.CheckedExpr  `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiskSelector) Reset() {
	*x = DiskSelector{}
	mi := &file_resource_definitions_block_block_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskSelector) ProtoMessage() {}

func (x *DiskSelector) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskSelector.ProtoReflect.Descriptor instead.
func (*DiskSelector) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{4}
}

func (x *DiskSelector) GetMatch() *v1alpha1.CheckedExpr {
	if x != nil {
		return x.Match
	}
	return nil
}

// DiskSpec is the spec for Disks status.
type DiskSpec struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Size           uint64                 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	IoSize         uint64                 `protobuf:"varint,2,opt,name=io_size,json=ioSize,proto3" json:"io_size,omitempty"`
	SectorSize     uint64                 `protobuf:"varint,3,opt,name=sector_size,json=sectorSize,proto3" json:"sector_size,omitempty"`
	Readonly       bool                   `protobuf:"varint,4,opt,name=readonly,proto3" json:"readonly,omitempty"`
	Model          string                 `protobuf:"bytes,5,opt,name=model,proto3" json:"model,omitempty"`
	Serial         string                 `protobuf:"bytes,6,opt,name=serial,proto3" json:"serial,omitempty"`
	Modalias       string                 `protobuf:"bytes,7,opt,name=modalias,proto3" json:"modalias,omitempty"`
	Wwid           string                 `protobuf:"bytes,8,opt,name=wwid,proto3" json:"wwid,omitempty"`
	BusPath        string                 `protobuf:"bytes,9,opt,name=bus_path,json=busPath,proto3" json:"bus_path,omitempty"`
	SubSystem      string                 `protobuf:"bytes,10,opt,name=sub_system,json=subSystem,proto3" json:"sub_system,omitempty"`
	Transport      string                 `protobuf:"bytes,11,opt,name=transport,proto3" json:"transport,omitempty"`
	Rotational     bool                   `protobuf:"varint,12,opt,name=rotational,proto3" json:"rotational,omitempty"`
	Cdrom          bool                   `protobuf:"varint,13,opt,name=cdrom,proto3" json:"cdrom,omitempty"`
	DevPath        string                 `protobuf:"bytes,14,opt,name=dev_path,json=devPath,proto3" json:"dev_path,omitempty"`
	PrettySize     string                 `protobuf:"bytes,15,opt,name=pretty_size,json=prettySize,proto3" json:"pretty_size,omitempty"`
	SecondaryDisks []string               `protobuf:"bytes,16,rep,name=secondary_disks,json=secondaryDisks,proto3" json:"secondary_disks,omitempty"`
	Uuid           string                 `protobuf:"bytes,17,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Symlinks       []string               `protobuf:"bytes,18,rep,name=symlinks,proto3" json:"symlinks,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DiskSpec) Reset() {
	*x = DiskSpec{}
	mi := &file_resource_definitions_block_block_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskSpec) ProtoMessage() {}

func (x *DiskSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskSpec.ProtoReflect.Descriptor instead.
func (*DiskSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{5}
}

func (x *DiskSpec) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DiskSpec) GetIoSize() uint64 {
	if x != nil {
		return x.IoSize
	}
	return 0
}

func (x *DiskSpec) GetSectorSize() uint64 {
	if x != nil {
		return x.SectorSize
	}
	return 0
}

func (x *DiskSpec) GetReadonly() bool {
	if x != nil {
		return x.Readonly
	}
	return false
}

func (x *DiskSpec) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *DiskSpec) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

func (x *DiskSpec) GetModalias() string {
	if x != nil {
		return x.Modalias
	}
	return ""
}

func (x *DiskSpec) GetWwid() string {
	if x != nil {
		return x.Wwid
	}
	return ""
}

func (x *DiskSpec) GetBusPath() string {
	if x != nil {
		return x.BusPath
	}
	return ""
}

func (x *DiskSpec) GetSubSystem() string {
	if x != nil {
		return x.SubSystem
	}
	return ""
}

func (x *DiskSpec) GetTransport() string {
	if x != nil {
		return x.Transport
	}
	return ""
}

func (x *DiskSpec) GetRotational() bool {
	if x != nil {
		return x.Rotational
	}
	return false
}

func (x *DiskSpec) GetCdrom() bool {
	if x != nil {
		return x.Cdrom
	}
	return false
}

func (x *DiskSpec) GetDevPath() string {
	if x != nil {
		return x.DevPath
	}
	return ""
}

func (x *DiskSpec) GetPrettySize() string {
	if x != nil {
		return x.PrettySize
	}
	return ""
}

func (x *DiskSpec) GetSecondaryDisks() []string {
	if x != nil {
		return x.SecondaryDisks
	}
	return nil
}

func (x *DiskSpec) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *DiskSpec) GetSymlinks() []string {
	if x != nil {
		return x.Symlinks
	}
	return nil
}

// EncryptionKey is the spec for volume encryption key.
type EncryptionKey struct {
	state                            protoimpl.MessageState       `protogen:"open.v1"`
	Slot                             int64                        `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	Type                             enums.BlockEncryptionKeyType `protobuf:"varint,2,opt,name=type,proto3,enum=talos.resource.definitions.enums.BlockEncryptionKeyType" json:"type,omitempty"`
	StaticPassphrase                 []byte                       `protobuf:"bytes,3,opt,name=static_passphrase,json=staticPassphrase,proto3" json:"static_passphrase,omitempty"`
	KmsEndpoint                      string                       `protobuf:"bytes,4,opt,name=kms_endpoint,json=kmsEndpoint,proto3" json:"kms_endpoint,omitempty"`
	TpmCheckSecurebootStatusOnEnroll bool                         `protobuf:"varint,5,opt,name=tpm_check_secureboot_status_on_enroll,json=tpmCheckSecurebootStatusOnEnroll,proto3" json:"tpm_check_secureboot_status_on_enroll,omitempty"`
	LockToState                      bool                         `protobuf:"varint,6,opt,name=lock_to_state,json=lockToState,proto3" json:"lock_to_state,omitempty"`
	TpmpcRs                          []int64                      `protobuf:"varint,7,rep,packed,name=tpmpc_rs,json=tpmpcRs,proto3" json:"tpmpc_rs,omitempty"`
	TpmPubKeyPcRs                    []int64                      `protobuf:"varint,8,rep,packed,name=tpm_pub_key_pc_rs,json=tpmPubKeyPcRs,proto3" json:"tpm_pub_key_pc_rs,omitempty"`
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *EncryptionKey) Reset() {
	*x = EncryptionKey{}
	mi := &file_resource_definitions_block_block_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncryptionKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptionKey) ProtoMessage() {}

func (x *EncryptionKey) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptionKey.ProtoReflect.Descriptor instead.
func (*EncryptionKey) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{6}
}

func (x *EncryptionKey) GetSlot() int64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *EncryptionKey) GetType() enums.BlockEncryptionKeyType {
	if x != nil {
		return x.Type
	}
	return enums.BlockEncryptionKeyType(0)
}

func (x *EncryptionKey) GetStaticPassphrase() []byte {
	if x != nil {
		return x.StaticPassphrase
	}
	return nil
}

func (x *EncryptionKey) GetKmsEndpoint() string {
	if x != nil {
		return x.KmsEndpoint
	}
	return ""
}

func (x *EncryptionKey) GetTpmCheckSecurebootStatusOnEnroll() bool {
	if x != nil {
		return x.TpmCheckSecurebootStatusOnEnroll
	}
	return false
}

func (x *EncryptionKey) GetLockToState() bool {
	if x != nil {
		return x.LockToState
	}
	return false
}

func (x *EncryptionKey) GetTpmpcRs() []int64 {
	if x != nil {
		return x.TpmpcRs
	}
	return nil
}

func (x *EncryptionKey) GetTpmPubKeyPcRs() []int64 {
	if x != nil {
		return x.TpmPubKeyPcRs
	}
	return nil
}

// EncryptionSpec is the spec for volume encryption.
type EncryptionSpec struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Provider      enums.BlockEncryptionProviderType `protobuf:"varint,1,opt,name=provider,proto3,enum=talos.resource.definitions.enums.BlockEncryptionProviderType" json:"provider,omitempty"`
	Keys          []*EncryptionKey                  `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
	Cipher        string                            `protobuf:"bytes,3,opt,name=cipher,proto3" json:"cipher,omitempty"`
	KeySize       uint64                            `protobuf:"varint,4,opt,name=key_size,json=keySize,proto3" json:"key_size,omitempty"`
	BlockSize     uint64                            `protobuf:"varint,5,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
	PerfOptions   []string                          `protobuf:"bytes,6,rep,name=perf_options,json=perfOptions,proto3" json:"perf_options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncryptionSpec) Reset() {
	*x = EncryptionSpec{}
	mi := &file_resource_definitions_block_block_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncryptionSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptionSpec) ProtoMessage() {}

func (x *EncryptionSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptionSpec.ProtoReflect.Descriptor instead.
func (*EncryptionSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{7}
}

func (x *EncryptionSpec) GetProvider() enums.BlockEncryptionProviderType {
	if x != nil {
		return x.Provider
	}
	return enums.BlockEncryptionProviderType(0)
}

func (x *EncryptionSpec) GetKeys() []*EncryptionKey {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *EncryptionSpec) GetCipher() string {
	if x != nil {
		return x.Cipher
	}
	return ""
}

func (x *EncryptionSpec) GetKeySize() uint64 {
	if x != nil {
		return x.KeySize
	}
	return 0
}

func (x *EncryptionSpec) GetBlockSize() uint64 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

func (x *EncryptionSpec) GetPerfOptions() []string {
	if x != nil {
		return x.PerfOptions
	}
	return nil
}

// FilesystemSpec is the spec for volume filesystem.
type FilesystemSpec struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Type          enums.BlockFilesystemType `protobuf:"varint,1,opt,name=type,proto3,enum=talos.resource.definitions.enums.BlockFilesystemType" json:"type,omitempty"`
	Label         string                    `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilesystemSpec) Reset() {
	*x = FilesystemSpec{}
	mi := &file_resource_definitions_block_block_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilesystemSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesystemSpec) ProtoMessage() {}

func (x *FilesystemSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesystemSpec.ProtoReflect.Descriptor instead.
func (*FilesystemSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{8}
}

func (x *FilesystemSpec) GetType() enums.BlockFilesystemType {
	if x != nil {
		return x.Type
	}
	return enums.BlockFilesystemType(0)
}

func (x *FilesystemSpec) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

// LocatorSpec is the spec for volume locator.
type LocatorSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Match         *v1alpha1.CheckedExpr  `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocatorSpec) Reset() {
	*x = LocatorSpec{}
	mi := &file_resource_definitions_block_block_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocatorSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocatorSpec) ProtoMessage() {}

func (x *LocatorSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocatorSpec.ProtoReflect.Descriptor instead.
func (*LocatorSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{9}
}

func (x *LocatorSpec) GetMatch() *v1alpha1.CheckedExpr {
	if x != nil {
		return x.Match
	}
	return nil
}

// MountRequestSpec is the spec for MountRequest.
type MountRequestSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VolumeId      string                 `protobuf:"bytes,1,opt,name=volume_id,json=volumeId,proto3" json:"volume_id,omitempty"`
	ParentMountId string                 `protobuf:"bytes,2,opt,name=parent_mount_id,json=parentMountId,proto3" json:"parent_mount_id,omitempty"`
	Requesters    []string               `protobuf:"bytes,3,rep,name=requesters,proto3" json:"requesters,omitempty"`
	RequesterIDs  []string               `protobuf:"bytes,4,rep,name=requester_i_ds,json=requesterIDs,proto3" json:"requester_i_ds,omitempty"`
	ReadOnly      bool                   `protobuf:"varint,5,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MountRequestSpec) Reset() {
	*x = MountRequestSpec{}
	mi := &file_resource_definitions_block_block_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MountRequestSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountRequestSpec) ProtoMessage() {}

func (x *MountRequestSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountRequestSpec.ProtoReflect.Descriptor instead.
func (*MountRequestSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{10}
}

func (x *MountRequestSpec) GetVolumeId() string {
	if x != nil {
		return x.VolumeId
	}
	return ""
}

func (x *MountRequestSpec) GetParentMountId() string {
	if x != nil {
		return x.ParentMountId
	}
	return ""
}

func (x *MountRequestSpec) GetRequesters() []string {
	if x != nil {
		return x.Requesters
	}
	return nil
}

func (x *MountRequestSpec) GetRequesterIDs() []string {
	if x != nil {
		return x.RequesterIDs
	}
	return nil
}

func (x *MountRequestSpec) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

// MountSpec is the spec for volume mount.
type MountSpec struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	TargetPath          string                 `protobuf:"bytes,1,opt,name=target_path,json=targetPath,proto3" json:"target_path,omitempty"`
	SelinuxLabel        string                 `protobuf:"bytes,2,opt,name=selinux_label,json=selinuxLabel,proto3" json:"selinux_label,omitempty"`
	ProjectQuotaSupport bool                   `protobuf:"varint,3,opt,name=project_quota_support,json=projectQuotaSupport,proto3" json:"project_quota_support,omitempty"`
	ParentId            string                 `protobuf:"bytes,4,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	FileMode            uint32                 `protobuf:"varint,5,opt,name=file_mode,json=fileMode,proto3" json:"file_mode,omitempty"`
	Uid                 int64                  `protobuf:"varint,6,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid                 int64                  `protobuf:"varint,7,opt,name=gid,proto3" json:"gid,omitempty"`
	RecursiveRelabel    bool                   `protobuf:"varint,8,opt,name=recursive_relabel,json=recursiveRelabel,proto3" json:"recursive_relabel,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *MountSpec) Reset() {
	*x = MountSpec{}
	mi := &file_resource_definitions_block_block_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MountSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountSpec) ProtoMessage() {}

func (x *MountSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountSpec.ProtoReflect.Descriptor instead.
func (*MountSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{11}
}

func (x *MountSpec) GetTargetPath() string {
	if x != nil {
		return x.TargetPath
	}
	return ""
}

func (x *MountSpec) GetSelinuxLabel() string {
	if x != nil {
		return x.SelinuxLabel
	}
	return ""
}

func (x *MountSpec) GetProjectQuotaSupport() bool {
	if x != nil {
		return x.ProjectQuotaSupport
	}
	return false
}

func (x *MountSpec) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *MountSpec) GetFileMode() uint32 {
	if x != nil {
		return x.FileMode
	}
	return 0
}

func (x *MountSpec) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *MountSpec) GetGid() int64 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *MountSpec) GetRecursiveRelabel() bool {
	if x != nil {
		return x.RecursiveRelabel
	}
	return false
}

// MountStatusSpec is the spec for MountStatus.
type MountStatusSpec struct {
	state               protoimpl.MessageState            `protogen:"open.v1"`
	Spec                *MountRequestSpec                 `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	Target              string                            `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Source              string                            `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	Filesystem          enums.BlockFilesystemType         `protobuf:"varint,4,opt,name=filesystem,proto3,enum=talos.resource.definitions.enums.BlockFilesystemType" json:"filesystem,omitempty"`
	ReadOnly            bool                              `protobuf:"varint,5,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	ProjectQuotaSupport bool                              `protobuf:"varint,6,opt,name=project_quota_support,json=projectQuotaSupport,proto3" json:"project_quota_support,omitempty"`
	EncryptionProvider  enums.BlockEncryptionProviderType `protobuf:"varint,7,opt,name=encryption_provider,json=encryptionProvider,proto3,enum=talos.resource.definitions.enums.BlockEncryptionProviderType" json:"encryption_provider,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *MountStatusSpec) Reset() {
	*x = MountStatusSpec{}
	mi := &file_resource_definitions_block_block_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MountStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MountStatusSpec) ProtoMessage() {}

func (x *MountStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MountStatusSpec.ProtoReflect.Descriptor instead.
func (*MountStatusSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{12}
}

func (x *MountStatusSpec) GetSpec() *MountRequestSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *MountStatusSpec) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *MountStatusSpec) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *MountStatusSpec) GetFilesystem() enums.BlockFilesystemType {
	if x != nil {
		return x.Filesystem
	}
	return enums.BlockFilesystemType(0)
}

func (x *MountStatusSpec) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *MountStatusSpec) GetProjectQuotaSupport() bool {
	if x != nil {
		return x.ProjectQuotaSupport
	}
	return false
}

func (x *MountStatusSpec) GetEncryptionProvider() enums.BlockEncryptionProviderType {
	if x != nil {
		return x.EncryptionProvider
	}
	return enums.BlockEncryptionProviderType(0)
}

// PartitionSpec is the spec for volume partitioning.
type PartitionSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MinSize       uint64                 `protobuf:"varint,1,opt,name=min_size,json=minSize,proto3" json:"min_size,omitempty"`
	MaxSize       uint64                 `protobuf:"varint,2,opt,name=max_size,json=maxSize,proto3" json:"max_size,omitempty"`
	Grow          bool                   `protobuf:"varint,3,opt,name=grow,proto3" json:"grow,omitempty"`
	Label         string                 `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	TypeUuid      string                 `protobuf:"bytes,5,opt,name=type_uuid,json=typeUuid,proto3" json:"type_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartitionSpec) Reset() {
	*x = PartitionSpec{}
	mi := &file_resource_definitions_block_block_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionSpec) ProtoMessage() {}

func (x *PartitionSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionSpec.ProtoReflect.Descriptor instead.
func (*PartitionSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{13}
}

func (x *PartitionSpec) GetMinSize() uint64 {
	if x != nil {
		return x.MinSize
	}
	return 0
}

func (x *PartitionSpec) GetMaxSize() uint64 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

func (x *PartitionSpec) GetGrow() bool {
	if x != nil {
		return x.Grow
	}
	return false
}

func (x *PartitionSpec) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *PartitionSpec) GetTypeUuid() string {
	if x != nil {
		return x.TypeUuid
	}
	return ""
}

// ProvisioningSpec is the spec for volume provisioning.
type ProvisioningSpec struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DiskSelector   *DiskSelector          `protobuf:"bytes,1,opt,name=disk_selector,json=diskSelector,proto3" json:"disk_selector,omitempty"`
	PartitionSpec  *PartitionSpec         `protobuf:"bytes,2,opt,name=partition_spec,json=partitionSpec,proto3" json:"partition_spec,omitempty"`
	Wave           int64                  `protobuf:"varint,3,opt,name=wave,proto3" json:"wave,omitempty"`
	FilesystemSpec *FilesystemSpec        `protobuf:"bytes,4,opt,name=filesystem_spec,json=filesystemSpec,proto3" json:"filesystem_spec,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ProvisioningSpec) Reset() {
	*x = ProvisioningSpec{}
	mi := &file_resource_definitions_block_block_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProvisioningSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisioningSpec) ProtoMessage() {}

func (x *ProvisioningSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisioningSpec.ProtoReflect.Descriptor instead.
func (*ProvisioningSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{14}
}

func (x *ProvisioningSpec) GetDiskSelector() *DiskSelector {
	if x != nil {
		return x.DiskSelector
	}
	return nil
}

func (x *ProvisioningSpec) GetPartitionSpec() *PartitionSpec {
	if x != nil {
		return x.PartitionSpec
	}
	return nil
}

func (x *ProvisioningSpec) GetWave() int64 {
	if x != nil {
		return x.Wave
	}
	return 0
}

func (x *ProvisioningSpec) GetFilesystemSpec() *FilesystemSpec {
	if x != nil {
		return x.FilesystemSpec
	}
	return nil
}

// SwapStatusSpec is the spec for SwapStatuss resource.
type SwapStatusSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Device        string                 `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	SizeBytes     uint64                 `protobuf:"varint,2,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	SizeHuman     string                 `protobuf:"bytes,3,opt,name=size_human,json=sizeHuman,proto3" json:"size_human,omitempty"`
	UsedBytes     uint64                 `protobuf:"varint,4,opt,name=used_bytes,json=usedBytes,proto3" json:"used_bytes,omitempty"`
	UsedHuman     string                 `protobuf:"bytes,5,opt,name=used_human,json=usedHuman,proto3" json:"used_human,omitempty"`
	Priority      int32                  `protobuf:"varint,6,opt,name=priority,proto3" json:"priority,omitempty"`
	Type          string                 `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwapStatusSpec) Reset() {
	*x = SwapStatusSpec{}
	mi := &file_resource_definitions_block_block_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwapStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapStatusSpec) ProtoMessage() {}

func (x *SwapStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapStatusSpec.ProtoReflect.Descriptor instead.
func (*SwapStatusSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{15}
}

func (x *SwapStatusSpec) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *SwapStatusSpec) GetSizeBytes() uint64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *SwapStatusSpec) GetSizeHuman() string {
	if x != nil {
		return x.SizeHuman
	}
	return ""
}

func (x *SwapStatusSpec) GetUsedBytes() uint64 {
	if x != nil {
		return x.UsedBytes
	}
	return 0
}

func (x *SwapStatusSpec) GetUsedHuman() string {
	if x != nil {
		return x.UsedHuman
	}
	return ""
}

func (x *SwapStatusSpec) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *SwapStatusSpec) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// SymlinkProvisioningSpec is the spec for volume symlink.
type SymlinkProvisioningSpec struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	SymlinkTargetPath string                 `protobuf:"bytes,1,opt,name=symlink_target_path,json=symlinkTargetPath,proto3" json:"symlink_target_path,omitempty"`
	Force             bool                   `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SymlinkProvisioningSpec) Reset() {
	*x = SymlinkProvisioningSpec{}
	mi := &file_resource_definitions_block_block_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymlinkProvisioningSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymlinkProvisioningSpec) ProtoMessage() {}

func (x *SymlinkProvisioningSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymlinkProvisioningSpec.ProtoReflect.Descriptor instead.
func (*SymlinkProvisioningSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{16}
}

func (x *SymlinkProvisioningSpec) GetSymlinkTargetPath() string {
	if x != nil {
		return x.SymlinkTargetPath
	}
	return ""
}

func (x *SymlinkProvisioningSpec) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

// SymlinkSpec is the spec for Symlinks resource.
type SymlinkSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Paths         []string               `protobuf:"bytes,1,rep,name=paths,proto3" json:"paths,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SymlinkSpec) Reset() {
	*x = SymlinkSpec{}
	mi := &file_resource_definitions_block_block_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymlinkSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymlinkSpec) ProtoMessage() {}

func (x *SymlinkSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymlinkSpec.ProtoReflect.Descriptor instead.
func (*SymlinkSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{17}
}

func (x *SymlinkSpec) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

// SystemDiskSpec is the spec for SystemDisks resource.
type SystemDiskSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DiskId        string                 `protobuf:"bytes,1,opt,name=disk_id,json=diskId,proto3" json:"disk_id,omitempty"`
	DevPath       string                 `protobuf:"bytes,2,opt,name=dev_path,json=devPath,proto3" json:"dev_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemDiskSpec) Reset() {
	*x = SystemDiskSpec{}
	mi := &file_resource_definitions_block_block_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemDiskSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemDiskSpec) ProtoMessage() {}

func (x *SystemDiskSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemDiskSpec.ProtoReflect.Descriptor instead.
func (*SystemDiskSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{18}
}

func (x *SystemDiskSpec) GetDiskId() string {
	if x != nil {
		return x.DiskId
	}
	return ""
}

func (x *SystemDiskSpec) GetDevPath() string {
	if x != nil {
		return x.DevPath
	}
	return ""
}

// TPMEncryptionOptionsInfo is the options for TPM-based encryption.
type TPMEncryptionOptionsInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PcRs          []int64                `protobuf:"varint,1,rep,packed,name=pc_rs,json=pcRs,proto3" json:"pc_rs,omitempty"`
	PubKeyPcRs    []int64                `protobuf:"varint,2,rep,packed,name=pub_key_pc_rs,json=pubKeyPcRs,proto3" json:"pub_key_pc_rs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TPMEncryptionOptionsInfo) Reset() {
	*x = TPMEncryptionOptionsInfo{}
	mi := &file_resource_definitions_block_block_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TPMEncryptionOptionsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPMEncryptionOptionsInfo) ProtoMessage() {}

func (x *TPMEncryptionOptionsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPMEncryptionOptionsInfo.ProtoReflect.Descriptor instead.
func (*TPMEncryptionOptionsInfo) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{19}
}

func (x *TPMEncryptionOptionsInfo) GetPcRs() []int64 {
	if x != nil {
		return x.PcRs
	}
	return nil
}

func (x *TPMEncryptionOptionsInfo) GetPubKeyPcRs() []int64 {
	if x != nil {
		return x.PubKeyPcRs
	}
	return nil
}

// UserDiskConfigStatusSpec is the spec for UserDiskConfigStatus resource.
type UserDiskConfigStatusSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ready         bool                   `protobuf:"varint,1,opt,name=ready,proto3" json:"ready,omitempty"`
	TornDown      bool                   `protobuf:"varint,2,opt,name=torn_down,json=tornDown,proto3" json:"torn_down,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserDiskConfigStatusSpec) Reset() {
	*x = UserDiskConfigStatusSpec{}
	mi := &file_resource_definitions_block_block_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserDiskConfigStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDiskConfigStatusSpec) ProtoMessage() {}

func (x *UserDiskConfigStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDiskConfigStatusSpec.ProtoReflect.Descriptor instead.
func (*UserDiskConfigStatusSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{20}
}

func (x *UserDiskConfigStatusSpec) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *UserDiskConfigStatusSpec) GetTornDown() bool {
	if x != nil {
		return x.TornDown
	}
	return false
}

// VolumeConfigSpec is the spec for VolumeConfig resource.
type VolumeConfigSpec struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	ParentId      string                   `protobuf:"bytes,1,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Type          enums.BlockVolumeType    `protobuf:"varint,2,opt,name=type,proto3,enum=talos.resource.definitions.enums.BlockVolumeType" json:"type,omitempty"`
	Provisioning  *ProvisioningSpec        `protobuf:"bytes,3,opt,name=provisioning,proto3" json:"provisioning,omitempty"`
	Locator       *LocatorSpec             `protobuf:"bytes,4,opt,name=locator,proto3" json:"locator,omitempty"`
	Mount         *MountSpec               `protobuf:"bytes,5,opt,name=mount,proto3" json:"mount,omitempty"`
	Encryption    *EncryptionSpec          `protobuf:"bytes,6,opt,name=encryption,proto3" json:"encryption,omitempty"`
	Symlink       *SymlinkProvisioningSpec `protobuf:"bytes,7,opt,name=symlink,proto3" json:"symlink,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VolumeConfigSpec) Reset() {
	*x = VolumeConfigSpec{}
	mi := &file_resource_definitions_block_block_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VolumeConfigSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeConfigSpec) ProtoMessage() {}

func (x *VolumeConfigSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeConfigSpec.ProtoReflect.Descriptor instead.
func (*VolumeConfigSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{21}
}

func (x *VolumeConfigSpec) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *VolumeConfigSpec) GetType() enums.BlockVolumeType {
	if x != nil {
		return x.Type
	}
	return enums.BlockVolumeType(0)
}

func (x *VolumeConfigSpec) GetProvisioning() *ProvisioningSpec {
	if x != nil {
		return x.Provisioning
	}
	return nil
}

func (x *VolumeConfigSpec) GetLocator() *LocatorSpec {
	if x != nil {
		return x.Locator
	}
	return nil
}

func (x *VolumeConfigSpec) GetMount() *MountSpec {
	if x != nil {
		return x.Mount
	}
	return nil
}

func (x *VolumeConfigSpec) GetEncryption() *EncryptionSpec {
	if x != nil {
		return x.Encryption
	}
	return nil
}

func (x *VolumeConfigSpec) GetSymlink() *SymlinkProvisioningSpec {
	if x != nil {
		return x.Symlink
	}
	return nil
}

// VolumeMountRequestSpec is the spec for VolumeMountRequest.
type VolumeMountRequestSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VolumeId      string                 `protobuf:"bytes,1,opt,name=volume_id,json=volumeId,proto3" json:"volume_id,omitempty"`
	Requester     string                 `protobuf:"bytes,2,opt,name=requester,proto3" json:"requester,omitempty"`
	ReadOnly      bool                   `protobuf:"varint,3,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VolumeMountRequestSpec) Reset() {
	*x = VolumeMountRequestSpec{}
	mi := &file_resource_definitions_block_block_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VolumeMountRequestSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeMountRequestSpec) ProtoMessage() {}

func (x *VolumeMountRequestSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeMountRequestSpec.ProtoReflect.Descriptor instead.
func (*VolumeMountRequestSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{22}
}

func (x *VolumeMountRequestSpec) GetVolumeId() string {
	if x != nil {
		return x.VolumeId
	}
	return ""
}

func (x *VolumeMountRequestSpec) GetRequester() string {
	if x != nil {
		return x.Requester
	}
	return ""
}

func (x *VolumeMountRequestSpec) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

// VolumeMountStatusSpec is the spec for VolumeMountStatus.
type VolumeMountStatusSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VolumeId      string                 `protobuf:"bytes,1,opt,name=volume_id,json=volumeId,proto3" json:"volume_id,omitempty"`
	Requester     string                 `protobuf:"bytes,2,opt,name=requester,proto3" json:"requester,omitempty"`
	Target        string                 `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	ReadOnly      bool                   `protobuf:"varint,4,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VolumeMountStatusSpec) Reset() {
	*x = VolumeMountStatusSpec{}
	mi := &file_resource_definitions_block_block_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VolumeMountStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeMountStatusSpec) ProtoMessage() {}

func (x *VolumeMountStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeMountStatusSpec.ProtoReflect.Descriptor instead.
func (*VolumeMountStatusSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{23}
}

func (x *VolumeMountStatusSpec) GetVolumeId() string {
	if x != nil {
		return x.VolumeId
	}
	return ""
}

func (x *VolumeMountStatusSpec) GetRequester() string {
	if x != nil {
		return x.Requester
	}
	return ""
}

func (x *VolumeMountStatusSpec) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *VolumeMountStatusSpec) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

// VolumeStatusSpec is the spec for VolumeStatus resource.
type VolumeStatusSpec struct {
	state                    protoimpl.MessageState            `protogen:"open.v1"`
	Phase                    enums.BlockVolumePhase            `protobuf:"varint,1,opt,name=phase,proto3,enum=talos.resource.definitions.enums.BlockVolumePhase" json:"phase,omitempty"`
	Location                 string                            `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	ErrorMessage             string                            `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Uuid                     string                            `protobuf:"bytes,4,opt,name=uuid,proto3" json:"uuid,omitempty"`
	PartitionUuid            string                            `protobuf:"bytes,5,opt,name=partition_uuid,json=partitionUuid,proto3" json:"partition_uuid,omitempty"`
	PreFailPhase             enums.BlockVolumePhase            `protobuf:"varint,6,opt,name=pre_fail_phase,json=preFailPhase,proto3,enum=talos.resource.definitions.enums.BlockVolumePhase" json:"pre_fail_phase,omitempty"`
	ParentLocation           string                            `protobuf:"bytes,7,opt,name=parent_location,json=parentLocation,proto3" json:"parent_location,omitempty"`
	PartitionIndex           int64                             `protobuf:"varint,8,opt,name=partition_index,json=partitionIndex,proto3" json:"partition_index,omitempty"`
	Size                     uint64                            `protobuf:"varint,9,opt,name=size,proto3" json:"size,omitempty"`
	Filesystem               enums.BlockFilesystemType         `protobuf:"varint,10,opt,name=filesystem,proto3,enum=talos.resource.definitions.enums.BlockFilesystemType" json:"filesystem,omitempty"`
	MountLocation            string                            `protobuf:"bytes,11,opt,name=mount_location,json=mountLocation,proto3" json:"mount_location,omitempty"`
	EncryptionProvider       enums.BlockEncryptionProviderType `protobuf:"varint,12,opt,name=encryption_provider,json=encryptionProvider,proto3,enum=talos.resource.definitions.enums.BlockEncryptionProviderType" json:"encryption_provider,omitempty"`
	PrettySize               string                            `protobuf:"bytes,13,opt,name=pretty_size,json=prettySize,proto3" json:"pretty_size,omitempty"`
	EncryptionFailedSyncs    []string                          `protobuf:"bytes,14,rep,name=encryption_failed_syncs,json=encryptionFailedSyncs,proto3" json:"encryption_failed_syncs,omitempty"`
	MountSpec                *MountSpec                        `protobuf:"bytes,15,opt,name=mount_spec,json=mountSpec,proto3" json:"mount_spec,omitempty"`
	Type                     enums.BlockVolumeType             `protobuf:"varint,16,opt,name=type,proto3,enum=talos.resource.definitions.enums.BlockVolumeType" json:"type,omitempty"`
	ConfiguredEncryptionKeys []string                          `protobuf:"bytes,17,rep,name=configured_encryption_keys,json=configuredEncryptionKeys,proto3" json:"configured_encryption_keys,omitempty"`
	SymlinkSpec              *SymlinkProvisioningSpec          `protobuf:"bytes,18,opt,name=symlink_spec,json=symlinkSpec,proto3" json:"symlink_spec,omitempty"`
	ParentId                 string                            `protobuf:"bytes,19,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	EncryptionLockedToState  bool                              `protobuf:"varint,20,opt,name=encryption_locked_to_state,json=encryptionLockedToState,proto3" json:"encryption_locked_to_state,omitempty"`
	EncryptionSlot           int64                             `protobuf:"varint,21,opt,name=encryption_slot,json=encryptionSlot,proto3" json:"encryption_slot,omitempty"`
	TpmEncryptionOptions     *TPMEncryptionOptionsInfo         `protobuf:"bytes,22,opt,name=tpm_encryption_options,json=tpmEncryptionOptions,proto3" json:"tpm_encryption_options,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *VolumeStatusSpec) Reset() {
	*x = VolumeStatusSpec{}
	mi := &file_resource_definitions_block_block_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VolumeStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeStatusSpec) ProtoMessage() {}

func (x *VolumeStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeStatusSpec.ProtoReflect.Descriptor instead.
func (*VolumeStatusSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{24}
}

func (x *VolumeStatusSpec) GetPhase() enums.BlockVolumePhase {
	if x != nil {
		return x.Phase
	}
	return enums.BlockVolumePhase(0)
}

func (x *VolumeStatusSpec) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *VolumeStatusSpec) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *VolumeStatusSpec) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *VolumeStatusSpec) GetPartitionUuid() string {
	if x != nil {
		return x.PartitionUuid
	}
	return ""
}

func (x *VolumeStatusSpec) GetPreFailPhase() enums.BlockVolumePhase {
	if x != nil {
		return x.PreFailPhase
	}
	return enums.BlockVolumePhase(0)
}

func (x *VolumeStatusSpec) GetParentLocation() string {
	if x != nil {
		return x.ParentLocation
	}
	return ""
}

func (x *VolumeStatusSpec) GetPartitionIndex() int64 {
	if x != nil {
		return x.PartitionIndex
	}
	return 0
}

func (x *VolumeStatusSpec) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *VolumeStatusSpec) GetFilesystem() enums.BlockFilesystemType {
	if x != nil {
		return x.Filesystem
	}
	return enums.BlockFilesystemType(0)
}

func (x *VolumeStatusSpec) GetMountLocation() string {
	if x != nil {
		return x.MountLocation
	}
	return ""
}

func (x *VolumeStatusSpec) GetEncryptionProvider() enums.BlockEncryptionProviderType {
	if x != nil {
		return x.EncryptionProvider
	}
	return enums.BlockEncryptionProviderType(0)
}

func (x *VolumeStatusSpec) GetPrettySize() string {
	if x != nil {
		return x.PrettySize
	}
	return ""
}

func (x *VolumeStatusSpec) GetEncryptionFailedSyncs() []string {
	if x != nil {
		return x.EncryptionFailedSyncs
	}
	return nil
}

func (x *VolumeStatusSpec) GetMountSpec() *MountSpec {
	if x != nil {
		return x.MountSpec
	}
	return nil
}

func (x *VolumeStatusSpec) GetType() enums.BlockVolumeType {
	if x != nil {
		return x.Type
	}
	return enums.BlockVolumeType(0)
}

func (x *VolumeStatusSpec) GetConfiguredEncryptionKeys() []string {
	if x != nil {
		return x.ConfiguredEncryptionKeys
	}
	return nil
}

func (x *VolumeStatusSpec) GetSymlinkSpec() *SymlinkProvisioningSpec {
	if x != nil {
		return x.SymlinkSpec
	}
	return nil
}

func (x *VolumeStatusSpec) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *VolumeStatusSpec) GetEncryptionLockedToState() bool {
	if x != nil {
		return x.EncryptionLockedToState
	}
	return false
}

func (x *VolumeStatusSpec) GetEncryptionSlot() int64 {
	if x != nil {
		return x.EncryptionSlot
	}
	return 0
}

func (x *VolumeStatusSpec) GetTpmEncryptionOptions() *TPMEncryptionOptionsInfo {
	if x != nil {
		return x.TpmEncryptionOptions
	}
	return nil
}

// ZswapStatusSpec is the spec for ZswapStatus resource.
type ZswapStatusSpec struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	TotalSizeBytes      uint64                 `protobuf:"varint,1,opt,name=total_size_bytes,json=totalSizeBytes,proto3" json:"total_size_bytes,omitempty"`
	TotalSizeHuman      string                 `protobuf:"bytes,2,opt,name=total_size_human,json=totalSizeHuman,proto3" json:"total_size_human,omitempty"`
	StoredPages         uint64                 `protobuf:"varint,3,opt,name=stored_pages,json=storedPages,proto3" json:"stored_pages,omitempty"`
	PoolLimitHit        uint64                 `protobuf:"varint,4,opt,name=pool_limit_hit,json=poolLimitHit,proto3" json:"pool_limit_hit,omitempty"`
	RejectReclaimFail   uint64                 `protobuf:"varint,5,opt,name=reject_reclaim_fail,json=rejectReclaimFail,proto3" json:"reject_reclaim_fail,omitempty"`
	RejectAllocFail     uint64                 `protobuf:"varint,6,opt,name=reject_alloc_fail,json=rejectAllocFail,proto3" json:"reject_alloc_fail,omitempty"`
	RejectKmemcacheFail uint64                 `protobuf:"varint,7,opt,name=reject_kmemcache_fail,json=rejectKmemcacheFail,proto3" json:"reject_kmemcache_fail,omitempty"`
	RejectCompressFail  uint64                 `protobuf:"varint,8,opt,name=reject_compress_fail,json=rejectCompressFail,proto3" json:"reject_compress_fail,omitempty"`
	RejectCompressPoor  uint64                 `protobuf:"varint,9,opt,name=reject_compress_poor,json=rejectCompressPoor,proto3" json:"reject_compress_poor,omitempty"`
	WrittenBackPages    uint64                 `protobuf:"varint,10,opt,name=written_back_pages,json=writtenBackPages,proto3" json:"written_back_pages,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ZswapStatusSpec) Reset() {
	*x = ZswapStatusSpec{}
	mi := &file_resource_definitions_block_block_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZswapStatusSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZswapStatusSpec) ProtoMessage() {}

func (x *ZswapStatusSpec) ProtoReflect() protoreflect.Message {
	mi := &file_resource_definitions_block_block_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZswapStatusSpec.ProtoReflect.Descriptor instead.
func (*ZswapStatusSpec) Descriptor() ([]byte, []int) {
	return file_resource_definitions_block_block_proto_rawDescGZIP(), []int{25}
}

func (x *ZswapStatusSpec) GetTotalSizeBytes() uint64 {
	if x != nil {
		return x.TotalSizeBytes
	}
	return 0
}

func (x *ZswapStatusSpec) GetTotalSizeHuman() string {
	if x != nil {
		return x.TotalSizeHuman
	}
	return ""
}

func (x *ZswapStatusSpec) GetStoredPages() uint64 {
	if x != nil {
		return x.StoredPages
	}
	return 0
}

func (x *ZswapStatusSpec) GetPoolLimitHit() uint64 {
	if x != nil {
		return x.PoolLimitHit
	}
	return 0
}

func (x *ZswapStatusSpec) GetRejectReclaimFail() uint64 {
	if x != nil {
		return x.RejectReclaimFail
	}
	return 0
}

func (x *ZswapStatusSpec) GetRejectAllocFail() uint64 {
	if x != nil {
		return x.RejectAllocFail
	}
	return 0
}

func (x *ZswapStatusSpec) GetRejectKmemcacheFail() uint64 {
	if x != nil {
		return x.RejectKmemcacheFail
	}
	return 0
}

func (x *ZswapStatusSpec) GetRejectCompressFail() uint64 {
	if x != nil {
		return x.RejectCompressFail
	}
	return 0
}

func (x *ZswapStatusSpec) GetRejectCompressPoor() uint64 {
	if x != nil {
		return x.RejectCompressPoor
	}
	return 0
}

func (x *ZswapStatusSpec) GetWrittenBackPages() uint64 {
	if x != nil {
		return x.WrittenBackPages
	}
	return 0
}

var File_resource_definitions_block_block_proto protoreflect.FileDescriptor

const file_resource_definitions_block_block_proto_rawDesc = "" +
	"\n" +
	"&resource/definitions/block/block.proto\x12 talos.resource.definitions.block\x1a&google/api/expr/v1alpha1/checked.proto\x1a&resource/definitions/enums/enums.proto\"\x99\x02\n" +
	"\n" +
	"DeviceSpec\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x14\n" +
	"\x05major\x18\x02 \x01(\x03R\x05major\x12\x14\n" +
	"\x05minor\x18\x03 \x01(\x03R\x05minor\x12%\n" +
	"\x0epartition_name\x18\x04 \x01(\tR\rpartitionName\x12)\n" +
	"\x10partition_number\x18\x05 \x01(\x03R\x0fpartitionNumber\x12\x1e\n" +
	"\n" +
	"generation\x18\x06 \x01(\x03R\n" +
	"generation\x12\x1f\n" +
	"\vdevice_path\x18\a \x01(\tR\n" +
	"devicePath\x12\x16\n" +
	"\x06parent\x18\b \x01(\tR\x06parent\x12 \n" +
	"\vsecondaries\x18\t \x03(\tR\vsecondaries\"\xe7\x04\n" +
	"\x14DiscoveredVolumeSpec\x12\x12\n" +
	"\x04size\x18\x01 \x01(\x04R\x04size\x12\x1f\n" +
	"\vsector_size\x18\x02 \x01(\x04R\n" +
	"sectorSize\x12\x17\n" +
	"\aio_size\x18\x03 \x01(\x04R\x06ioSize\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12\x12\n" +
	"\x04uuid\x18\x05 \x01(\tR\x04uuid\x12\x14\n" +
	"\x05label\x18\x06 \x01(\tR\x05label\x12\x1d\n" +
	"\n" +
	"block_size\x18\a \x01(\rR\tblockSize\x122\n" +
	"\x15filesystem_block_size\x18\b \x01(\rR\x13filesystemBlockSize\x12\x1f\n" +
	"\vprobed_size\x18\t \x01(\x04R\n" +
	"probedSize\x12%\n" +
	"\x0epartition_uuid\x18\n" +
	" \x01(\tR\rpartitionUuid\x12%\n" +
	"\x0epartition_type\x18\v \x01(\tR\rpartitionType\x12'\n" +
	"\x0fpartition_label\x18\f \x01(\tR\x0epartitionLabel\x12'\n" +
	"\x0fpartition_index\x18\r \x01(\x04R\x0epartitionIndex\x12\x12\n" +
	"\x04type\x18\x0e \x01(\tR\x04type\x12\x1f\n" +
	"\vdevice_path\x18\x0f \x01(\tR\n" +
	"devicePath\x12\x16\n" +
	"\x06parent\x18\x10 \x01(\tR\x06parent\x12\x19\n" +
	"\bdev_path\x18\x11 \x01(\tR\adevPath\x12&\n" +
	"\x0fparent_dev_path\x18\x12 \x01(\tR\rparentDevPath\x12\x1f\n" +
	"\vpretty_size\x18\x13 \x01(\tR\n" +
	"prettySize\"7\n" +
	"\x1bDiscoveryRefreshRequestSpec\x12\x18\n" +
	"\arequest\x18\x01 \x01(\x03R\arequest\"6\n" +
	"\x1aDiscoveryRefreshStatusSpec\x12\x18\n" +
	"\arequest\x18\x01 \x01(\x03R\arequest\"K\n" +
	"\fDiskSelector\x12;\n" +
	"\x05match\x18\x01 \x01(\v2%.google.api.expr.v1alpha1.CheckedExprR\x05match\"\xf5\x03\n" +
	"\bDiskSpec\x12\x12\n" +
	"\x04size\x18\x01 \x01(\x04R\x04size\x12\x17\n" +
	"\aio_size\x18\x02 \x01(\x04R\x06ioSize\x12\x1f\n" +
	"\vsector_size\x18\x03 \x01(\x04R\n" +
	"sectorSize\x12\x1a\n" +
	"\breadonly\x18\x04 \x01(\bR\breadonly\x12\x14\n" +
	"\x05model\x18\x05 \x01(\tR\x05model\x12\x16\n" +
	"\x06serial\x18\x06 \x01(\tR\x06serial\x12\x1a\n" +
	"\bmodalias\x18\a \x01(\tR\bmodalias\x12\x12\n" +
	"\x04wwid\x18\b \x01(\tR\x04wwid\x12\x19\n" +
	"\bbus_path\x18\t \x01(\tR\abusPath\x12\x1d\n" +
	"\n" +
	"sub_system\x18\n" +
	" \x01(\tR\tsubSystem\x12\x1c\n" +
	"\ttransport\x18\v \x01(\tR\ttransport\x12\x1e\n" +
	"\n" +
	"rotational\x18\f \x01(\bR\n" +
	"rotational\x12\x14\n" +
	"\x05cdrom\x18\r \x01(\bR\x05cdrom\x12\x19\n" +
	"\bdev_path\x18\x0e \x01(\tR\adevPath\x12\x1f\n" +
	"\vpretty_size\x18\x0f \x01(\tR\n" +
	"prettySize\x12'\n" +
	"\x0fsecondary_disks\x18\x10 \x03(\tR\x0esecondaryDisks\x12\x12\n" +
	"\x04uuid\x18\x11 \x01(\tR\x04uuid\x12\x1a\n" +
	"\bsymlinks\x18\x12 \x03(\tR\bsymlinks\"\xfb\x02\n" +
	"\rEncryptionKey\x12\x12\n" +
	"\x04slot\x18\x01 \x01(\x03R\x04slot\x12L\n" +
	"\x04type\x18\x02 \x01(\x0e28.talos.resource.definitions.enums.BlockEncryptionKeyTypeR\x04type\x12+\n" +
	"\x11static_passphrase\x18\x03 \x01(\fR\x10staticPassphrase\x12!\n" +
	"\fkms_endpoint\x18\x04 \x01(\tR\vkmsEndpoint\x12O\n" +
	"%tpm_check_secureboot_status_on_enroll\x18\x05 \x01(\bR tpmCheckSecurebootStatusOnEnroll\x12\"\n" +
	"\rlock_to_state\x18\x06 \x01(\bR\vlockToState\x12\x19\n" +
	"\btpmpc_rs\x18\a \x03(\x03R\atpmpcRs\x12(\n" +
	"\x11tpm_pub_key_pc_rs\x18\b \x03(\x03R\rtpmPubKeyPcRs\"\xa5\x02\n" +
	"\x0eEncryptionSpec\x12Y\n" +
	"\bprovider\x18\x01 \x01(\x0e2=.talos.resource.definitions.enums.BlockEncryptionProviderTypeR\bprovider\x12C\n" +
	"\x04keys\x18\x02 \x03(\v2/.talos.resource.definitions.block.EncryptionKeyR\x04keys\x12\x16\n" +
	"\x06cipher\x18\x03 \x01(\tR\x06cipher\x12\x19\n" +
	"\bkey_size\x18\x04 \x01(\x04R\akeySize\x12\x1d\n" +
	"\n" +
	"block_size\x18\x05 \x01(\x04R\tblockSize\x12!\n" +
	"\fperf_options\x18\x06 \x03(\tR\vperfOptions\"q\n" +
	"\x0eFilesystemSpec\x12I\n" +
	"\x04type\x18\x01 \x01(\x0e25.talos.resource.definitions.enums.BlockFilesystemTypeR\x04type\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05label\"J\n" +
	"\vLocatorSpec\x12;\n" +
	"\x05match\x18\x01 \x01(\v2%.google.api.expr.v1alpha1.CheckedExprR\x05match\"\xba\x01\n" +
	"\x10MountRequestSpec\x12\x1b\n" +
	"\tvolume_id\x18\x01 \x01(\tR\bvolumeId\x12&\n" +
	"\x0fparent_mount_id\x18\x02 \x01(\tR\rparentMountId\x12\x1e\n" +
	"\n" +
	"requesters\x18\x03 \x03(\tR\n" +
	"requesters\x12$\n" +
	"\x0erequester_i_ds\x18\x04 \x03(\tR\frequesterIDs\x12\x1b\n" +
	"\tread_only\x18\x05 \x01(\bR\breadOnly\"\x90\x02\n" +
	"\tMountSpec\x12\x1f\n" +
	"\vtarget_path\x18\x01 \x01(\tR\n" +
	"targetPath\x12#\n" +
	"\rselinux_label\x18\x02 \x01(\tR\fselinuxLabel\x122\n" +
	"\x15project_quota_support\x18\x03 \x01(\bR\x13projectQuotaSupport\x12\x1b\n" +
	"\tparent_id\x18\x04 \x01(\tR\bparentId\x12\x1b\n" +
	"\tfile_mode\x18\x05 \x01(\rR\bfileMode\x12\x10\n" +
	"\x03uid\x18\x06 \x01(\x03R\x03uid\x12\x10\n" +
	"\x03gid\x18\a \x01(\x03R\x03gid\x12+\n" +
	"\x11recursive_relabel\x18\b \x01(\bR\x10recursiveRelabel\"\xa1\x03\n" +
	"\x0fMountStatusSpec\x12F\n" +
	"\x04spec\x18\x01 \x01(\v22.talos.resource.definitions.block.MountRequestSpecR\x04spec\x12\x16\n" +
	"\x06target\x18\x02 \x01(\tR\x06target\x12\x16\n" +
	"\x06source\x18\x03 \x01(\tR\x06source\x12U\n" +
	"\n" +
	"filesystem\x18\x04 \x01(\x0e25.talos.resource.definitions.enums.BlockFilesystemTypeR\n" +
	"filesystem\x12\x1b\n" +
	"\tread_only\x18\x05 \x01(\bR\breadOnly\x122\n" +
	"\x15project_quota_support\x18\x06 \x01(\bR\x13projectQuotaSupport\x12n\n" +
	"\x13encryption_provider\x18\a \x01(\x0e2=.talos.resource.definitions.enums.BlockEncryptionProviderTypeR\x12encryptionProvider\"\x8c\x01\n" +
	"\rPartitionSpec\x12\x19\n" +
	"\bmin_size\x18\x01 \x01(\x04R\aminSize\x12\x19\n" +
	"\bmax_size\x18\x02 \x01(\x04R\amaxSize\x12\x12\n" +
	"\x04grow\x18\x03 \x01(\bR\x04grow\x12\x14\n" +
	"\x05label\x18\x04 \x01(\tR\x05label\x12\x1b\n" +
	"\ttype_uuid\x18\x05 \x01(\tR\btypeUuid\"\xae\x02\n" +
	"\x10ProvisioningSpec\x12S\n" +
	"\rdisk_selector\x18\x01 \x01(\v2..talos.resource.definitions.block.DiskSelectorR\fdiskSelector\x12V\n" +
	"\x0epartition_spec\x18\x02 \x01(\v2/.talos.resource.definitions.block.PartitionSpecR\rpartitionSpec\x12\x12\n" +
	"\x04wave\x18\x03 \x01(\x03R\x04wave\x12Y\n" +
	"\x0ffilesystem_spec\x18\x04 \x01(\v20.talos.resource.definitions.block.FilesystemSpecR\x0efilesystemSpec\"\xd4\x01\n" +
	"\x0eSwapStatusSpec\x12\x16\n" +
	"\x06device\x18\x01 \x01(\tR\x06device\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x02 \x01(\x04R\tsizeBytes\x12\x1d\n" +
	"\n" +
	"size_human\x18\x03 \x01(\tR\tsizeHuman\x12\x1d\n" +
	"\n" +
	"used_bytes\x18\x04 \x01(\x04R\tusedBytes\x12\x1d\n" +
	"\n" +
	"used_human\x18\x05 \x01(\tR\tusedHuman\x12\x1a\n" +
	"\bpriority\x18\x06 \x01(\x05R\bpriority\x12\x12\n" +
	"\x04type\x18\a \x01(\tR\x04type\"_\n" +
	"\x17SymlinkProvisioningSpec\x12.\n" +
	"\x13symlink_target_path\x18\x01 \x01(\tR\x11symlinkTargetPath\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\"#\n" +
	"\vSymlinkSpec\x12\x14\n" +
	"\x05paths\x18\x01 \x03(\tR\x05paths\"D\n" +
	"\x0eSystemDiskSpec\x12\x17\n" +
	"\adisk_id\x18\x01 \x01(\tR\x06diskId\x12\x19\n" +
	"\bdev_path\x18\x02 \x01(\tR\adevPath\"R\n" +
	"\x18TPMEncryptionOptionsInfo\x12\x13\n" +
	"\x05pc_rs\x18\x01 \x03(\x03R\x04pcRs\x12!\n" +
	"\rpub_key_pc_rs\x18\x02 \x03(\x03R\n" +
	"pubKeyPcRs\"M\n" +
	"\x18UserDiskConfigStatusSpec\x12\x14\n" +
	"\x05ready\x18\x01 \x01(\bR\x05ready\x12\x1b\n" +
	"\ttorn_down\x18\x02 \x01(\bR\btornDown\"\x81\x04\n" +
	"\x10VolumeConfigSpec\x12\x1b\n" +
	"\tparent_id\x18\x01 \x01(\tR\bparentId\x12E\n" +
	"\x04type\x18\x02 \x01(\x0e21.talos.resource.definitions.enums.BlockVolumeTypeR\x04type\x12V\n" +
	"\fprovisioning\x18\x03 \x01(\v22.talos.resource.definitions.block.ProvisioningSpecR\fprovisioning\x12G\n" +
	"\alocator\x18\x04 \x01(\v2-.talos.resource.definitions.block.LocatorSpecR\alocator\x12A\n" +
	"\x05mount\x18\x05 \x01(\v2+.talos.resource.definitions.block.MountSpecR\x05mount\x12P\n" +
	"\n" +
	"encryption\x18\x06 \x01(\v20.talos.resource.definitions.block.EncryptionSpecR\n" +
	"encryption\x12S\n" +
	"\asymlink\x18\a \x01(\v29.talos.resource.definitions.block.SymlinkProvisioningSpecR\asymlink\"p\n" +
	"\x16VolumeMountRequestSpec\x12\x1b\n" +
	"\tvolume_id\x18\x01 \x01(\tR\bvolumeId\x12\x1c\n" +
	"\trequester\x18\x02 \x01(\tR\trequester\x12\x1b\n" +
	"\tread_only\x18\x03 \x01(\bR\breadOnly\"\x87\x01\n" +
	"\x15VolumeMountStatusSpec\x12\x1b\n" +
	"\tvolume_id\x18\x01 \x01(\tR\bvolumeId\x12\x1c\n" +
	"\trequester\x18\x02 \x01(\tR\trequester\x12\x16\n" +
	"\x06target\x18\x03 \x01(\tR\x06target\x12\x1b\n" +
	"\tread_only\x18\x04 \x01(\bR\breadOnly\"\x83\n" +
	"\n" +
	"\x10VolumeStatusSpec\x12H\n" +
	"\x05phase\x18\x01 \x01(\x0e22.talos.resource.definitions.enums.BlockVolumePhaseR\x05phase\x12\x1a\n" +
	"\blocation\x18\x02 \x01(\tR\blocation\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12\x12\n" +
	"\x04uuid\x18\x04 \x01(\tR\x04uuid\x12%\n" +
	"\x0epartition_uuid\x18\x05 \x01(\tR\rpartitionUuid\x12X\n" +
	"\x0epre_fail_phase\x18\x06 \x01(\x0e22.talos.resource.definitions.enums.BlockVolumePhaseR\fpreFailPhase\x12'\n" +
	"\x0fparent_location\x18\a \x01(\tR\x0eparentLocation\x12'\n" +
	"\x0fpartition_index\x18\b \x01(\x03R\x0epartitionIndex\x12\x12\n" +
	"\x04size\x18\t \x01(\x04R\x04size\x12U\n" +
	"\n" +
	"filesystem\x18\n" +
	" \x01(\x0e25.talos.resource.definitions.enums.BlockFilesystemTypeR\n" +
	"filesystem\x12%\n" +
	"\x0emount_location\x18\v \x01(\tR\rmountLocation\x12n\n" +
	"\x13encryption_provider\x18\f \x01(\x0e2=.talos.resource.definitions.enums.BlockEncryptionProviderTypeR\x12encryptionProvider\x12\x1f\n" +
	"\vpretty_size\x18\r \x01(\tR\n" +
	"prettySize\x126\n" +
	"\x17encryption_failed_syncs\x18\x0e \x03(\tR\x15encryptionFailedSyncs\x12J\n" +
	"\n" +
	"mount_spec\x18\x0f \x01(\v2+.talos.resource.definitions.block.MountSpecR\tmountSpec\x12E\n" +
	"\x04type\x18\x10 \x01(\x0e21.talos.resource.definitions.enums.BlockVolumeTypeR\x04type\x12<\n" +
	"\x1aconfigured_encryption_keys\x18\x11 \x03(\tR\x18configuredEncryptionKeys\x12\\\n" +
	"\fsymlink_spec\x18\x12 \x01(\v29.talos.resource.definitions.block.SymlinkProvisioningSpecR\vsymlinkSpec\x12\x1b\n" +
	"\tparent_id\x18\x13 \x01(\tR\bparentId\x12;\n" +
	"\x1aencryption_locked_to_state\x18\x14 \x01(\bR\x17encryptionLockedToState\x12'\n" +
	"\x0fencryption_slot\x18\x15 \x01(\x03R\x0eencryptionSlot\x12p\n" +
	"\x16tpm_encryption_options\x18\x16 \x01(\v2:.talos.resource.definitions.block.TPMEncryptionOptionsInfoR\x14tpmEncryptionOptions\"\xd0\x03\n" +
	"\x0fZswapStatusSpec\x12(\n" +
	"\x10total_size_bytes\x18\x01 \x01(\x04R\x0etotalSizeBytes\x12(\n" +
	"\x10total_size_human\x18\x02 \x01(\tR\x0etotalSizeHuman\x12!\n" +
	"\fstored_pages\x18\x03 \x01(\x04R\vstoredPages\x12$\n" +
	"\x0epool_limit_hit\x18\x04 \x01(\x04R\fpoolLimitHit\x12.\n" +
	"\x13reject_reclaim_fail\x18\x05 \x01(\x04R\x11rejectReclaimFail\x12*\n" +
	"\x11reject_alloc_fail\x18\x06 \x01(\x04R\x0frejectAllocFail\x122\n" +
	"\x15reject_kmemcache_fail\x18\a \x01(\x04R\x13rejectKmemcacheFail\x120\n" +
	"\x14reject_compress_fail\x18\b \x01(\x04R\x12rejectCompressFail\x120\n" +
	"\x14reject_compress_poor\x18\t \x01(\x04R\x12rejectCompressPoor\x12,\n" +
	"\x12written_back_pages\x18\n" +
	" \x01(\x04R\x10writtenBackPagesBt\n" +
	"(dev.talos.api.resource.definitions.blockZHgithub.com/siderolabs/talos/pkg/machinery/api/resource/definitions/blockb\x06proto3"

var (
	file_resource_definitions_block_block_proto_rawDescOnce sync.Once
	file_resource_definitions_block_block_proto_rawDescData []byte
)

func file_resource_definitions_block_block_proto_rawDescGZIP() []byte {
	file_resource_definitions_block_block_proto_rawDescOnce.Do(func() {
		file_resource_definitions_block_block_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_resource_definitions_block_block_proto_rawDesc), len(file_resource_definitions_block_block_proto_rawDesc)))
	})
	return file_resource_definitions_block_block_proto_rawDescData
}

var file_resource_definitions_block_block_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_resource_definitions_block_block_proto_goTypes = []any{
	(*DeviceSpec)(nil),                     // 0: talos.resource.definitions.block.DeviceSpec
	(*DiscoveredVolumeSpec)(nil),           // 1: talos.resource.definitions.block.DiscoveredVolumeSpec
	(*DiscoveryRefreshRequestSpec)(nil),    // 2: talos.resource.definitions.block.DiscoveryRefreshRequestSpec
	(*DiscoveryRefreshStatusSpec)(nil),     // 3: talos.resource.definitions.block.DiscoveryRefreshStatusSpec
	(*DiskSelector)(nil),                   // 4: talos.resource.definitions.block.DiskSelector
	(*DiskSpec)(nil),                       // 5: talos.resource.definitions.block.DiskSpec
	(*EncryptionKey)(nil),                  // 6: talos.resource.definitions.block.EncryptionKey
	(*EncryptionSpec)(nil),                 // 7: talos.resource.definitions.block.EncryptionSpec
	(*FilesystemSpec)(nil),                 // 8: talos.resource.definitions.block.FilesystemSpec
	(*LocatorSpec)(nil),                    // 9: talos.resource.definitions.block.LocatorSpec
	(*MountRequestSpec)(nil),               // 10: talos.resource.definitions.block.MountRequestSpec
	(*MountSpec)(nil),                      // 11: talos.resource.definitions.block.MountSpec
	(*MountStatusSpec)(nil),                // 12: talos.resource.definitions.block.MountStatusSpec
	(*PartitionSpec)(nil),                  // 13: talos.resource.definitions.block.PartitionSpec
	(*ProvisioningSpec)(nil),               // 14: talos.resource.definitions.block.ProvisioningSpec
	(*SwapStatusSpec)(nil),                 // 15: talos.resource.definitions.block.SwapStatusSpec
	(*SymlinkProvisioningSpec)(nil),        // 16: talos.resource.definitions.block.SymlinkProvisioningSpec
	(*SymlinkSpec)(nil),                    // 17: talos.resource.definitions.block.SymlinkSpec
	(*SystemDiskSpec)(nil),                 // 18: talos.resource.definitions.block.SystemDiskSpec
	(*TPMEncryptionOptionsInfo)(nil),       // 19: talos.resource.definitions.block.TPMEncryptionOptionsInfo
	(*UserDiskConfigStatusSpec)(nil),       // 20: talos.resource.definitions.block.UserDiskConfigStatusSpec
	(*VolumeConfigSpec)(nil),               // 21: talos.resource.definitions.block.VolumeConfigSpec
	(*VolumeMountRequestSpec)(nil),         // 22: talos.resource.definitions.block.VolumeMountRequestSpec
	(*VolumeMountStatusSpec)(nil),          // 23: talos.resource.definitions.block.VolumeMountStatusSpec
	(*VolumeStatusSpec)(nil),               // 24: talos.resource.definitions.block.VolumeStatusSpec
	(*ZswapStatusSpec)(nil),                // 25: talos.resource.definitions.block.ZswapStatusSpec
	(*v1alpha1.CheckedExpr)(nil),           // 26: google.api.expr.v1alpha1.CheckedExpr
	(enums.BlockEncryptionKeyType)(0),      // 27: talos.resource.definitions.enums.BlockEncryptionKeyType
	(enums.BlockEncryptionProviderType)(0), // 28: talos.resource.definitions.enums.BlockEncryptionProviderType
	(enums.BlockFilesystemType)(0),         // 29: talos.resource.definitions.enums.BlockFilesystemType
	(enums.BlockVolumeType)(0),             // 30: talos.resource.definitions.enums.BlockVolumeType
	(enums.BlockVolumePhase)(0),            // 31: talos.resource.definitions.enums.BlockVolumePhase
}
var file_resource_definitions_block_block_proto_depIdxs = []int32{
	26, // 0: talos.resource.definitions.block.DiskSelector.match:type_name -> google.api.expr.v1alpha1.CheckedExpr
	27, // 1: talos.resource.definitions.block.EncryptionKey.type:type_name -> talos.resource.definitions.enums.BlockEncryptionKeyType
	28, // 2: talos.resource.definitions.block.EncryptionSpec.provider:type_name -> talos.resource.definitions.enums.BlockEncryptionProviderType
	6,  // 3: talos.resource.definitions.block.EncryptionSpec.keys:type_name -> talos.resource.definitions.block.EncryptionKey
	29, // 4: talos.resource.definitions.block.FilesystemSpec.type:type_name -> talos.resource.definitions.enums.BlockFilesystemType
	26, // 5: talos.resource.definitions.block.LocatorSpec.match:type_name -> google.api.expr.v1alpha1.CheckedExpr
	10, // 6: talos.resource.definitions.block.MountStatusSpec.spec:type_name -> talos.resource.definitions.block.MountRequestSpec
	29, // 7: talos.resource.definitions.block.MountStatusSpec.filesystem:type_name -> talos.resource.definitions.enums.BlockFilesystemType
	28, // 8: talos.resource.definitions.block.MountStatusSpec.encryption_provider:type_name -> talos.resource.definitions.enums.BlockEncryptionProviderType
	4,  // 9: talos.resource.definitions.block.ProvisioningSpec.disk_selector:type_name -> talos.resource.definitions.block.DiskSelector
	13, // 10: talos.resource.definitions.block.ProvisioningSpec.partition_spec:type_name -> talos.resource.definitions.block.PartitionSpec
	8,  // 11: talos.resource.definitions.block.ProvisioningSpec.filesystem_spec:type_name -> talos.resource.definitions.block.FilesystemSpec
	30, // 12: talos.resource.definitions.block.VolumeConfigSpec.type:type_name -> talos.resource.definitions.enums.BlockVolumeType
	14, // 13: talos.resource.definitions.block.VolumeConfigSpec.provisioning:type_name -> talos.resource.definitions.block.ProvisioningSpec
	9,  // 14: talos.resource.definitions.block.VolumeConfigSpec.locator:type_name -> talos.resource.definitions.block.LocatorSpec
	11, // 15: talos.resource.definitions.block.VolumeConfigSpec.mount:type_name -> talos.resource.definitions.block.MountSpec
	7,  // 16: talos.resource.definitions.block.VolumeConfigSpec.encryption:type_name -> talos.resource.definitions.block.EncryptionSpec
	16, // 17: talos.resource.definitions.block.VolumeConfigSpec.symlink:type_name -> talos.resource.definitions.block.SymlinkProvisioningSpec
	31, // 18: talos.resource.definitions.block.VolumeStatusSpec.phase:type_name -> talos.resource.definitions.enums.BlockVolumePhase
	31, // 19: talos.resource.definitions.block.VolumeStatusSpec.pre_fail_phase:type_name -> talos.resource.definitions.enums.BlockVolumePhase
	29, // 20: talos.resource.definitions.block.VolumeStatusSpec.filesystem:type_name -> talos.resource.definitions.enums.BlockFilesystemType
	28, // 21: talos.resource.definitions.block.VolumeStatusSpec.encryption_provider:type_name -> talos.resource.definitions.enums.BlockEncryptionProviderType
	11, // 22: talos.resource.definitions.block.VolumeStatusSpec.mount_spec:type_name -> talos.resource.definitions.block.MountSpec
	30, // 23: talos.resource.definitions.block.VolumeStatusSpec.type:type_name -> talos.resource.definitions.enums.BlockVolumeType
	16, // 24: talos.resource.definitions.block.VolumeStatusSpec.symlink_spec:type_name -> talos.resource.definitions.block.SymlinkProvisioningSpec
	19, // 25: talos.resource.definitions.block.VolumeStatusSpec.tpm_encryption_options:type_name -> talos.resource.definitions.block.TPMEncryptionOptionsInfo
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_resource_definitions_block_block_proto_init() }
func file_resource_definitions_block_block_proto_init() {
	if File_resource_definitions_block_block_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_resource_definitions_block_block_proto_rawDesc), len(file_resource_definitions_block_block_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_resource_definitions_block_block_proto_goTypes,
		DependencyIndexes: file_resource_definitions_block_block_proto_depIdxs,
		MessageInfos:      file_resource_definitions_block_block_proto_msgTypes,
	}.Build()
	File_resource_definitions_block_block_proto = out.File
	file_resource_definitions_block_block_proto_goTypes = nil
	file_resource_definitions_block_block_proto_depIdxs = nil
}
